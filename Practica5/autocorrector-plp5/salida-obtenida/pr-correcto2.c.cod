mov #0 33;Estoy en Ref:tid
mov #5 34; Guardo un numero Entero
mov #0 35
mov 33 A
muli #1
addi #3; Instr: Ref asig
mov @A 35;Asig
mov #0 36;Estoy en Ref:tid
mov #0 37; Guardo un numero Entero
mov #0 38
mov 36 A
muli #1
addi #1; Instr: Ref asig
mov @A 38;Asig
A; Realizamos el if

mov #0 39;Estoy en Ref:tid
mov #0 39;Estoy en Ref:tid

mov 39 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 40
mov #0 39;Estoy en Ref:tid
mov #0 39;Estoy en Ref:tid

mov 39 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 40
mov #0 41;Estoy en Ref:tid
mov #0 41;Estoy en Ref:tid

mov 41 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 42
mov 40 A; Cargo el primer termino en A
lssi 42; Realizamos la operacion entera total.
mov A 43; Lo cargamos en la dir correspondiente.
mov 40 A
jz ; Realizamos el if
mov #0 44;Estoy en Ref:tid
mov #0 45; Guardo un numero Entero
mov #0 46
mov 44 A
muli #1
addi #2; Instr: Ref asig
mov @A 46;Asig

mov #0 47;Estoy en Ref:tid
mov #0 47;Estoy en Ref:tid

mov 47 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 48
mov #0 47;Estoy en Ref:tid
mov #0 47;Estoy en Ref:tid

mov 47 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 48
mov #0 49;Estoy en Ref:tid
mov #0 49;Estoy en Ref:tid

mov 49 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 50
mov 48 A; Cargo el primer termino en A
lssi 50; Realizamos la operacion entera total.
mov A 51; Lo cargamos en la dir correspondiente.
mov 48 A
jz  A; Realizamos el if
mov #0 52;Estoy en Ref:tid
mov #0 52;Estoy en Ref:tid
mov #0 53;Estoy en Ref:tid
mov #0 53;Estoy en Ref:tid

mov 53 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 54
mov 52 A; [ ]
muli #5
addi 54; 
mov A 55
mov #0 52;Estoy en Ref:tid
mov #0 52;Estoy en Ref:tid
mov #0 53;Estoy en Ref:tid
mov #0 53;Estoy en Ref:tid

mov 53 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 54
mov 52 A; [ ]
muli #5
addi 54; 
mov A 55
mov #0 56;Estoy en Ref:tid
mov #0 56;Estoy en Ref:tid

mov 56 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 57
mov 55 A; [ ]
muli #5
addi 57; 
mov A 58
mov #0 59; Guardo un numero Entero
mov #0 60
mov 58 A
muli #1
addi #4; Instr: Ref asig
mov @A 60;Asig
mov #0 61;Estoy en Ref:tid
mov #0 62;Estoy en Ref:tid
mov #0 62;Estoy en Ref:tid

mov 62 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 63
mov #0 62;Estoy en Ref:tid
mov #0 62;Estoy en Ref:tid

mov 62 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 63
mov #1 64; Guardo un numero Entero
mov 63 A; Cargo el primer termino en A
addi 64; Realizamos la operacion entera total.
mov A 65; Lo cargamos en la dir correspondiente.
mov #0 66
mov 61 A
muli #1
addi #2; Instr: Ref asig
mov @A 66;Asig
jmp  A; Realizamos el if

mov #0 67;Estoy en Ref:tid
mov #0 68;Estoy en Ref:tid
mov #0 68;Estoy en Ref:tid

mov 68 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 69
mov #0 68;Estoy en Ref:tid
mov #0 68;Estoy en Ref:tid

mov 68 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 69
mov #1 70; Guardo un numero Entero
mov 69 A; Cargo el primer termino en A
addi 70; Realizamos la operacion entera total.
mov A 71; Lo cargamos en la dir correspondiente.
mov #0 72
mov 67 A
muli #1
addi #1; Instr: Ref asig
mov @A 72;Asig
jmp A; Realizamos el if
; Realizamos el if

mov #0 73;Estoy en Ref:tid
mov #0 74; Guardo un numero Entero
mov #0 75
mov 73 A
muli #1
addi #1; Instr: Ref asig
mov @A 75;Asig
 Realizamos el if

mov #0 76;Estoy en Ref:tid
mov #0 76;Estoy en Ref:tid

mov 76 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 77
mov #0 76;Estoy en Ref:tid
mov #0 76;Estoy en Ref:tid

mov 76 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 77
mov #0 78;Estoy en Ref:tid
mov #0 78;Estoy en Ref:tid

mov 78 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 79
mov 77 A; Cargo el primer termino en A
lssi 79; Realizamos la operacion entera total.
mov A 80; Lo cargamos en la dir correspondiente.
mov 77 A
jz Realizamos el if
mov #0 81;Estoy en Ref:tid
mov #0 81;Estoy en Ref:tid
mov #0 82;Estoy en Ref:tid
mov #0 82;Estoy en Ref:tid

mov 82 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 83
mov 81 A; [ ]
muli #5
addi 83; 
mov A 84
mov #0 81;Estoy en Ref:tid
mov #0 81;Estoy en Ref:tid
mov #0 82;Estoy en Ref:tid
mov #0 82;Estoy en Ref:tid

mov 82 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 83
mov 81 A; [ ]
muli #5
addi 83; 
mov A 84
mov #0 85;Estoy en Ref:tid
mov #0 85;Estoy en Ref:tid

mov 85 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 86
mov 84 A; [ ]
muli #5
addi 86; 
mov A 87
mov #1 88; Guardo un numero Entero
mov #0 89
mov 87 A
muli #1
addi #4; Instr: Ref asig
mov @A 89;Asig
mov #0 90;Estoy en Ref:tid
mov #0 91;Estoy en Ref:tid
mov #0 91;Estoy en Ref:tid

mov 91 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 92
mov #0 91;Estoy en Ref:tid
mov #0 91;Estoy en Ref:tid

mov 91 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 92
mov #1 93; Guardo un numero Entero
mov 92 A; Cargo el primer termino en A
addi 93; Realizamos la operacion entera total.
mov A 94; Lo cargamos en la dir correspondiente.
mov #0 95
mov 90 A
muli #1
addi #1; Instr: Ref asig
mov @A 95;Asig
jmp  Realizamos el if
Realizamos el if

mov #0 96;Estoy en Ref:tid
mov #0 97; Guardo un numero Entero
mov #0 98
mov 96 A
muli #1
addi #1; Instr: Ref asig
mov @A 98;Asig
ealizamos el if

mov #0 99;Estoy en Ref:tid
mov #0 99;Estoy en Ref:tid

mov 99 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 100
mov #0 99;Estoy en Ref:tid
mov #0 99;Estoy en Ref:tid

mov 99 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 100
mov #0 101;Estoy en Ref:tid
mov #0 101;Estoy en Ref:tid

mov 101 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 102
mov 100 A; Cargo el primer termino en A
lssi 102; Realizamos la operacion entera total.
mov A 103; Lo cargamos en la dir correspondiente.
mov 100 A
jz alizamos el if
mov #0 104;Estoy en Ref:tid
mov #0 104;Estoy en Ref:tid
mov #0 105;Estoy en Ref:tid
mov #0 105;Estoy en Ref:tid

mov 105 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 106
mov 104 A; [ ]
muli #5
addi 106; 
mov A 107
mov #0 104;Estoy en Ref:tid
mov #0 104;Estoy en Ref:tid
mov #0 105;Estoy en Ref:tid
mov #0 105;Estoy en Ref:tid

mov 105 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 106
mov 104 A; [ ]
muli #5
addi 106; 
mov A 107
mov #0 108; Guardo un numero Entero
mov 107 A; [ ]
muli #5
addi 108; 
mov A 109
mov #1 110; Guardo un numero Entero
mov #0 111
mov 109 A
muli #1
addi #4; Instr: Ref asig
mov @A 111;Asig
mov #0 112;Estoy en Ref:tid
mov #0 113;Estoy en Ref:tid
mov #0 113;Estoy en Ref:tid

mov 113 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 114
mov #0 113;Estoy en Ref:tid
mov #0 113;Estoy en Ref:tid

mov 113 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 114
mov #1 115; Guardo un numero Entero
mov 114 A; Cargo el primer termino en A
addi 115; Realizamos la operacion entera total.
mov A 116; Lo cargamos en la dir correspondiente.
mov #0 117
mov 112 A
muli #1
addi #1; Instr: Ref asig
mov @A 117;Asig
jmp ealizamos el if
alizamos el if

mov #0 118;Estoy en Ref:tid
mov #1 119; Guardo un numero Entero
mov #0 120
mov 118 A
muli #1
addi #1; Instr: Ref asig
mov @A 120;Asig
lizamos el if

mov #0 121;Estoy en Ref:tid
mov #0 121;Estoy en Ref:tid

mov 121 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 122
mov #0 121;Estoy en Ref:tid
mov #0 121;Estoy en Ref:tid

mov 121 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 122
mov #0 123;Estoy en Ref:tid
mov #0 123;Estoy en Ref:tid

mov 123 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 124
mov 122 A; Cargo el primer termino en A
lssi 124; Realizamos la operacion entera total.
mov A 125; Lo cargamos en la dir correspondiente.
mov 122 A
jz izamos el if
mov #0 126;Estoy en Ref:tid
mov #0 126;Estoy en Ref:tid
mov #0 127;Estoy en Ref:tid
mov #0 127;Estoy en Ref:tid

mov 127 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 128
mov #0 127;Estoy en Ref:tid
mov #0 127;Estoy en Ref:tid

mov 127 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 128
mov #1 129; Guardo un numero Entero
mov 128 A; Cargo el primer termino en A
subi 129; Realizamos la operacion entera total.
mov A 130; Lo cargamos en la dir correspondiente.
mov 126 A; [ ]
muli #5
addi 130; 
mov A 131
mov #0 126;Estoy en Ref:tid
mov #0 126;Estoy en Ref:tid
mov #0 127;Estoy en Ref:tid
mov #0 127;Estoy en Ref:tid

mov 127 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 128
mov #0 127;Estoy en Ref:tid
mov #0 127;Estoy en Ref:tid

mov 127 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 128
mov #1 129; Guardo un numero Entero
mov 128 A; Cargo el primer termino en A
subi 129; Realizamos la operacion entera total.
mov A 130; Lo cargamos en la dir correspondiente.
mov 126 A; [ ]
muli #5
addi 130; 
mov A 131
mov #0 132;Estoy en Ref:tid
mov #0 132;Estoy en Ref:tid

mov 132 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 133
mov 131 A; [ ]
muli #5
addi 133; 
mov A 134
mov #1 135; Guardo un numero Entero
mov #0 136
mov 134 A
muli #1
addi #4; Instr: Ref asig
mov @A 136;Asig
mov #0 137;Estoy en Ref:tid
mov #0 138;Estoy en Ref:tid
mov #0 138;Estoy en Ref:tid

mov 138 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 139
mov #0 138;Estoy en Ref:tid
mov #0 138;Estoy en Ref:tid

mov 138 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 139
mov #1 140; Guardo un numero Entero
mov 139 A; Cargo el primer termino en A
addi 140; Realizamos la operacion entera total.
mov A 141; Lo cargamos en la dir correspondiente.
mov #0 142
mov 137 A
muli #1
addi #1; Instr: Ref asig
mov @A 142;Asig
jmp lizamos el if
izamos el if

mov #0 143;Estoy en Ref:tid
mov #1 144; Guardo un numero Entero
mov #0 145
mov 143 A
muli #1
addi #30; Instr: Ref asig
mov @A 145;Asig
mov #0 146;Estoy en Ref:tid
mov #0 147; Guardo un numero Entero
mov #0 148
mov 146 A
muli #1
addi #31; Instr: Ref asig
mov @A 148;Asig
mov #0 149;Estoy en Ref:tid
mov #0 150; Guardo un numero Entero
mov #0 151
mov 149 A
muli #1
addi #32; Instr: Ref asig
mov @A 151;Asig
mov #0 152;Estoy en Ref:tid
mov #0 153; Guardo un numero Entero
mov #0 154
mov 152 A
muli #1
addi #1; Instr: Ref asig
mov @A 154;Asig
mov #0 155;Estoy en Ref:tid
mov #0 156; Guardo un numero Entero
mov #0 157
mov 155 A
muli #1
addi #2; Instr: Ref asig
mov @A 157;Asig
wrr 159
wrl
wrr 162
wrl
mp 
;Factor : tpari Expr tpard
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 166;Estoy en Ref:tid
mov #0 166;Estoy en Ref:tid

mov 166 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 167
mov 165 A; Cargo el primer termino en A
lssi 167; Realizamos la operacion entera total.
mov A 168; Lo cargamos en la dir correspondiente.

;Factor : tpari Expr tpard
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 166;Estoy en Ref:tid
mov #0 166;Estoy en Ref:tid

mov 166 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 167
mov 165 A; Cargo el primer termino en A
lssi 167; Realizamos la operacion entera total.
mov A 168; Lo cargamos en la dir correspondiente.

mov 169 A; Cargo el primer termino en A
muli 175; Realizamos la operacion entera total.
mov A 176; Lo cargamos en la dir correspondiente.
;Factor : tpari Expr tpard
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 166;Estoy en Ref:tid
mov #0 166;Estoy en Ref:tid

mov 166 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 167
mov 165 A; Cargo el primer termino en A
lssi 167; Realizamos la operacion entera total.
mov A 168; Lo cargamos en la dir correspondiente.

;Factor : tpari Expr tpard
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 166;Estoy en Ref:tid
mov #0 166;Estoy en Ref:tid

mov 166 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 167
mov 165 A; Cargo el primer termino en A
lssi 167; Realizamos la operacion entera total.
mov A 168; Lo cargamos en la dir correspondiente.

mov 169 A; Cargo el primer termino en A
muli 175; Realizamos la operacion entera total.
mov A 176; Lo cargamos en la dir correspondiente.
mov 176 A; Cargo el primer termino en A
muli 181; Realizamos la operacion entera total.
mov A 182; Lo cargamos en la dir correspondiente.
;Factor : tpari Expr tpard
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 166;Estoy en Ref:tid
mov #0 166;Estoy en Ref:tid

mov 166 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 167
mov 165 A; Cargo el primer termino en A
lssi 167; Realizamos la operacion entera total.
mov A 168; Lo cargamos en la dir correspondiente.

;Factor : tpari Expr tpard
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 166;Estoy en Ref:tid
mov #0 166;Estoy en Ref:tid

mov 166 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 167
mov 165 A; Cargo el primer termino en A
lssi 167; Realizamos la operacion entera total.
mov A 168; Lo cargamos en la dir correspondiente.

mov 169 A; Cargo el primer termino en A
muli 175; Realizamos la operacion entera total.
mov A 176; Lo cargamos en la dir correspondiente.
;Factor : tpari Expr tpard
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 166;Estoy en Ref:tid
mov #0 166;Estoy en Ref:tid

mov 166 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 167
mov 165 A; Cargo el primer termino en A
lssi 167; Realizamos la operacion entera total.
mov A 168; Lo cargamos en la dir correspondiente.

;Factor : tpari Expr tpard
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 164;Estoy en Ref:tid
mov #0 164;Estoy en Ref:tid

mov 164 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 165
mov #0 166;Estoy en Ref:tid
mov #0 166;Estoy en Ref:tid

mov 166 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 167
mov 165 A; Cargo el primer termino en A
lssi 167; Realizamos la operacion entera total.
mov A 168; Lo cargamos en la dir correspondiente.

mov 169 A; Cargo el primer termino en A
muli 175; Realizamos la operacion entera total.
mov A 176; Lo cargamos en la dir correspondiente.
mov 176 A; Cargo el primer termino en A
muli 181; Realizamos la operacion entera total.
mov A 182; Lo cargamos en la dir correspondiente.
mov 182 A; Cargo el primer termino en A
muli 187; Realizamos la operacion entera total.
mov A 188; Lo cargamos en la dir correspondiente.
mov 188 A
jz p mov #0 183;Estoy en Ref:tid
mov #0 183;Estoy en Ref:tid

mov 183 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #32;Le sumo un tipo
mov @A 184
mov #0 183;Estoy en Ref:tid
mov #0 183;Estoy en Ref:tid

mov 183 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #32;Le sumo un tipo
mov @A 184
mov #0 185; Guardo un numero Entero
mov 184 A; Cargo el primer termino en A
eqli 185; Realizamos la operacion entera total.
mov A 186; Lo cargamos en la dir correspondiente.
mov 196 A; Realizamos el if
jz L27
mov #0 198;Estoy en Ref:tid
mov #0 199; Guardo un numero Entero
mov #0 200
mov 198 A
muli #1
addi #197; Instr: Ref asig
mov @A 200;Asig
mov 217 A; Realizamos el if
jz L13
mov #0 211;Estoy en Ref:tid
mov #0 211;Estoy en Ref:tid

mov 211 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 212
mov #0 211;Estoy en Ref:tid
mov #0 211;Estoy en Ref:tid

mov 211 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 212
mov #1 213; Guardo un numero Entero
mov 212 A; Cargo el primer termino en A
subi 213; Realizamos la operacion entera total.
mov A 214; Lo cargamos en la dir correspondiente.
mov 229 A; Realizamos el if
jz L11
mov #1 226; Guardo un numero Entero
mov #0 230;Estoy en Ref:tid
mov #0 231;Estoy en Ref:tid
mov #0 231;Estoy en Ref:tid

mov 231 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 232
mov #0 231;Estoy en Ref:tid
mov #0 231;Estoy en Ref:tid

mov 231 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 232
mov #1 233; Guardo un numero Entero
mov 232 A; Cargo el primer termino en A
addi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.
mov #0 235
mov 230 A
muli #1
addi #1; Instr: Ref asig
mov @A 235;Asig
mov #0 236;Estoy en Ref:tid
mov #0 237;Estoy en Ref:tid
mov #0 237;Estoy en Ref:tid

mov 237 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 238
mov #0 237;Estoy en Ref:tid
mov #0 237;Estoy en Ref:tid

mov 237 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 238
mov #1 239; Guardo un numero Entero
mov 238 A; Cargo el primer termino en A
addi 239; Realizamos la operacion entera total.
mov A 240; Lo cargamos en la dir correspondiente.
mov #0 241
mov 236 A
muli #1
addi #2; Instr: Ref asig
mov @A 241;Asig
mov #0 242;Estoy en Ref:tid
mov #0 243;Estoy en Ref:tid
mov #0 243;Estoy en Ref:tid

mov 243 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 244
mov #0 243;Estoy en Ref:tid
mov #0 243;Estoy en Ref:tid

mov 243 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 244
mov #1 245; Guardo un numero Entero
mov 244 A; Cargo el primer termino en A
addi 245; Realizamos la operacion entera total.
mov A 246; Lo cargamos en la dir correspondiente.
mov #0 247
mov 242 A
muli #1
addi #30; Instr: Ref asig
mov @A 247;Asig
mov #0 248;Estoy en Ref:tid
mov #1 249; Guardo un numero Entero
mov #0 250
mov 248 A
muli #1
addi #197; Instr: Ref asig
mov @A 250;Asig
jmp L12
L11
; Realizamos con else.L12
jmp L14
L13
; Realizamos con else.L14
mov 231 A; Realizamos el if
jz L17
mov 241 A; Realizamos el if
jz L15
mov #1 235; Guardo un numero Entero
mov #0 242;Estoy en Ref:tid
mov #0 243;Estoy en Ref:tid
mov #0 243;Estoy en Ref:tid

mov 243 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 244
mov #0 243;Estoy en Ref:tid
mov #0 243;Estoy en Ref:tid

mov 243 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 244
mov #1 245; Guardo un numero Entero
mov 244 A; Cargo el primer termino en A
addi 245; Realizamos la operacion entera total.
mov A 246; Lo cargamos en la dir correspondiente.
mov #0 247
mov 242 A
muli #1
addi #1; Instr: Ref asig
mov @A 247;Asig
mov #0 248;Estoy en Ref:tid
mov #0 249;Estoy en Ref:tid
mov #0 249;Estoy en Ref:tid

mov 249 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 250
mov #0 249;Estoy en Ref:tid
mov #0 249;Estoy en Ref:tid

mov 249 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 250
mov #1 251; Guardo un numero Entero
mov 250 A; Cargo el primer termino en A
addi 251; Realizamos la operacion entera total.
mov A 252; Lo cargamos en la dir correspondiente.
mov #0 253
mov 248 A
muli #1
addi #30; Instr: Ref asig
mov @A 253;Asig
mov #0 254;Estoy en Ref:tid
mov #1 255; Guardo un numero Entero
mov #0 256
mov 254 A
muli #1
addi #197; Instr: Ref asig
mov @A 256;Asig
jmp L16
L15
; Realizamos con else.L16
jmp L18
L17
; Realizamos con else.L18
mov 245 A; Realizamos el if
jz L21
mov 255 A; Realizamos el if
jz L19
mov #1 252; Guardo un numero Entero
mov #0 256;Estoy en Ref:tid
mov #0 257;Estoy en Ref:tid
mov #0 257;Estoy en Ref:tid

mov 257 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 258
mov #0 257;Estoy en Ref:tid
mov #0 257;Estoy en Ref:tid

mov 257 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 258
mov #1 259; Guardo un numero Entero
mov 258 A; Cargo el primer termino en A
addi 259; Realizamos la operacion entera total.
mov A 260; Lo cargamos en la dir correspondiente.
mov #0 261
mov 256 A
muli #1
addi #2; Instr: Ref asig
mov @A 261;Asig
mov #0 262;Estoy en Ref:tid
mov #0 263;Estoy en Ref:tid
mov #0 263;Estoy en Ref:tid

mov 263 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 264
mov #0 263;Estoy en Ref:tid
mov #0 263;Estoy en Ref:tid

mov 263 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 264
mov #1 265; Guardo un numero Entero
mov 264 A; Cargo el primer termino en A
addi 265; Realizamos la operacion entera total.
mov A 266; Lo cargamos en la dir correspondiente.
mov #0 267
mov 262 A
muli #1
addi #30; Instr: Ref asig
mov @A 267;Asig
mov #0 268;Estoy en Ref:tid
mov #1 269; Guardo un numero Entero
mov #0 270
mov 268 A
muli #1
addi #197; Instr: Ref asig
mov @A 270;Asig
jmp L20
L19
; Realizamos con else.L20
jmp L22
L21
; Realizamos con else.L22
mov 247 A; Realizamos el if
jz L25
wrr 251
wrl
wrr 254
wrl
jmp L26
L25
; Realizamos con else.mov 266 A; Realizamos el if
jz L23
mov #0 267;Estoy en Ref:tid
mov #1 268; Guardo un numero Entero
mov #0 269
mov 267 A
muli #1
addi #31; Instr: Ref asig
mov @A 269;Asig
jmp L24
L23
; Realizamos con else.mov #0 267;Estoy en Ref:tid
mov #2 268; Guardo un numero Entero
mov #0 269
mov 267 A
muli #1
addi #32; Instr: Ref asig
mov @A 269;Asig

L24

L26
jmp L28
L27
; Realizamos con else.L28
jmp mp p 
mov 198 A; Realizamos el if
jz L31
mov #0 199;Estoy en Ref:tid
mov #0 200; Guardo un numero Entero
mov #0 200; Guardo un numero Entero
mov #1 201; Guardo un numero Entero
mov 200 A; Cargo el primer termino en A
subi 201; Realizamos la operacion entera total.
mov A 202; Lo cargamos en la dir correspondiente.
mov #0 203
mov 199 A
muli #1
addi #30; Instr: Ref asig
mov @A 203;Asig
jmp L32
L31
; Realizamos con else.L32
wrr 200
wrl
mov #0 202;Estoy en Ref:tid
mov #0 202;Estoy en Ref:tid
mov #1 203; Guardo un numero Entero
mov 202 A; [ ]
muli #5
addi 203; 
mov A 204
mov #0 202;Estoy en Ref:tid
mov #0 202;Estoy en Ref:tid
mov #1 203; Guardo un numero Entero
mov 202 A; [ ]
muli #5
addi 203; 
mov A 204
mov #1 205; Guardo un numero Entero
mov 204 A; [ ]
muli #5
addi 205; 
mov A 206
mov #0 207; Guardo un numero Entero
mov #0 208
mov 206 A
muli #1
addi #4; Instr: Ref asig
mov @A 208;Asig
mov #0 209;Estoy en Ref:tid
mov #1 210; Guardo un numero Entero
mov #0 211
mov 209 A
muli #1
addi #30; Instr: Ref asig
mov @A 211;Asig
mov #0 212;Estoy en Ref:tid
mov #0 213; Guardo un numero Entero
mov #0 214
mov 212 A
muli #1
addi #31; Instr: Ref asig
mov @A 214;Asig
mov #0 215;Estoy en Ref:tid
mov #0 216; Guardo un numero Entero
mov #0 217
mov 215 A
muli #1
addi #32; Instr: Ref asig
mov @A 217;Asig
mov #0 218;Estoy en Ref:tid
mov #0 219; Guardo un numero Entero
mov #0 220
mov 218 A
muli #1
addi #1; Instr: Ref asig
mov @A 220;Asig
mov #0 221;Estoy en Ref:tid
mov #0 222; Guardo un numero Entero
mov #0 223
mov 221 A
muli #1
addi #2; Instr: Ref asig
mov @A 223;Asig
wrr 225
wrl
wrr 228
wrl
else.
;Factor : tpari Expr tpard
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 232;Estoy en Ref:tid
mov #0 232;Estoy en Ref:tid

mov 232 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 233
mov 231 A; Cargo el primer termino en A
lssi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.

;Factor : tpari Expr tpard
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 232;Estoy en Ref:tid
mov #0 232;Estoy en Ref:tid

mov 232 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 233
mov 231 A; Cargo el primer termino en A
lssi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.

mov 235 A; Cargo el primer termino en A
muli 241; Realizamos la operacion entera total.
mov A 242; Lo cargamos en la dir correspondiente.
;Factor : tpari Expr tpard
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 232;Estoy en Ref:tid
mov #0 232;Estoy en Ref:tid

mov 232 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 233
mov 231 A; Cargo el primer termino en A
lssi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.

;Factor : tpari Expr tpard
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 232;Estoy en Ref:tid
mov #0 232;Estoy en Ref:tid

mov 232 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 233
mov 231 A; Cargo el primer termino en A
lssi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.

mov 235 A; Cargo el primer termino en A
muli 241; Realizamos la operacion entera total.
mov A 242; Lo cargamos en la dir correspondiente.
mov 242 A; Cargo el primer termino en A
muli 247; Realizamos la operacion entera total.
mov A 248; Lo cargamos en la dir correspondiente.
;Factor : tpari Expr tpard
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 232;Estoy en Ref:tid
mov #0 232;Estoy en Ref:tid

mov 232 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 233
mov 231 A; Cargo el primer termino en A
lssi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.

;Factor : tpari Expr tpard
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 232;Estoy en Ref:tid
mov #0 232;Estoy en Ref:tid

mov 232 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 233
mov 231 A; Cargo el primer termino en A
lssi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.

mov 235 A; Cargo el primer termino en A
muli 241; Realizamos la operacion entera total.
mov A 242; Lo cargamos en la dir correspondiente.
;Factor : tpari Expr tpard
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 232;Estoy en Ref:tid
mov #0 232;Estoy en Ref:tid

mov 232 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 233
mov 231 A; Cargo el primer termino en A
lssi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.

;Factor : tpari Expr tpard
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 230;Estoy en Ref:tid
mov #0 230;Estoy en Ref:tid

mov 230 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 231
mov #0 232;Estoy en Ref:tid
mov #0 232;Estoy en Ref:tid

mov 232 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 233
mov 231 A; Cargo el primer termino en A
lssi 233; Realizamos la operacion entera total.
mov A 234; Lo cargamos en la dir correspondiente.

mov 235 A; Cargo el primer termino en A
muli 241; Realizamos la operacion entera total.
mov A 242; Lo cargamos en la dir correspondiente.
mov 242 A; Cargo el primer termino en A
muli 247; Realizamos la operacion entera total.
mov A 248; Lo cargamos en la dir correspondiente.
mov 248 A; Cargo el primer termino en A
muli 253; Realizamos la operacion entera total.
mov A 254; Lo cargamos en la dir correspondiente.
mov 254 A
jz lse.mov #0 249;Estoy en Ref:tid
mov #0 249;Estoy en Ref:tid

mov 249 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #32;Le sumo un tipo
mov @A 250
mov #0 249;Estoy en Ref:tid
mov #0 249;Estoy en Ref:tid

mov 249 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #32;Le sumo un tipo
mov @A 250
mov #0 251; Guardo un numero Entero
mov 250 A; Cargo el primer termino en A
eqli 251; Realizamos la operacion entera total.
mov A 252; Lo cargamos en la dir correspondiente.
mov 262 A; Realizamos el if
jz L49
mov #0 264;Estoy en Ref:tid
mov #0 265; Guardo un numero Entero
mov #0 266
mov 264 A
muli #1
addi #263; Instr: Ref asig
mov @A 266;Asig
mov 283 A; Realizamos el if
jz L35
mov #0 277;Estoy en Ref:tid
mov #0 277;Estoy en Ref:tid

mov 277 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 278
mov #0 277;Estoy en Ref:tid
mov #0 277;Estoy en Ref:tid

mov 277 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #3;Le sumo un tipo
mov @A 278
mov #1 279; Guardo un numero Entero
mov 278 A; Cargo el primer termino en A
subi 279; Realizamos la operacion entera total.
mov A 280; Lo cargamos en la dir correspondiente.
mov 295 A; Realizamos el if
jz L33
mov #1 292; Guardo un numero Entero
mov #0 296;Estoy en Ref:tid
mov #0 297;Estoy en Ref:tid
mov #0 297;Estoy en Ref:tid

mov 297 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 298
mov #0 297;Estoy en Ref:tid
mov #0 297;Estoy en Ref:tid

mov 297 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 298
mov #1 299; Guardo un numero Entero
mov 298 A; Cargo el primer termino en A
addi 299; Realizamos la operacion entera total.
mov A 300; Lo cargamos en la dir correspondiente.
mov #0 301
mov 296 A
muli #1
addi #1; Instr: Ref asig
mov @A 301;Asig
mov #0 302;Estoy en Ref:tid
mov #0 303;Estoy en Ref:tid
mov #0 303;Estoy en Ref:tid

mov 303 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 304
mov #0 303;Estoy en Ref:tid
mov #0 303;Estoy en Ref:tid

mov 303 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 304
mov #1 305; Guardo un numero Entero
mov 304 A; Cargo el primer termino en A
addi 305; Realizamos la operacion entera total.
mov A 306; Lo cargamos en la dir correspondiente.
mov #0 307
mov 302 A
muli #1
addi #2; Instr: Ref asig
mov @A 307;Asig
mov #0 308;Estoy en Ref:tid
mov #0 309;Estoy en Ref:tid
mov #0 309;Estoy en Ref:tid

mov 309 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 310
mov #0 309;Estoy en Ref:tid
mov #0 309;Estoy en Ref:tid

mov 309 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 310
mov #1 311; Guardo un numero Entero
mov 310 A; Cargo el primer termino en A
addi 311; Realizamos la operacion entera total.
mov A 312; Lo cargamos en la dir correspondiente.
mov #0 313
mov 308 A
muli #1
addi #30; Instr: Ref asig
mov @A 313;Asig
mov #0 314;Estoy en Ref:tid
mov #1 315; Guardo un numero Entero
mov #0 316
mov 314 A
muli #1
addi #263; Instr: Ref asig
mov @A 316;Asig
jmp L34
L33
; Realizamos con else.L34
jmp L36
L35
; Realizamos con else.L36
mov 297 A; Realizamos el if
jz L39
mov 307 A; Realizamos el if
jz L37
mov #1 301; Guardo un numero Entero
mov #0 308;Estoy en Ref:tid
mov #0 309;Estoy en Ref:tid
mov #0 309;Estoy en Ref:tid

mov 309 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 310
mov #0 309;Estoy en Ref:tid
mov #0 309;Estoy en Ref:tid

mov 309 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #1;Le sumo un tipo
mov @A 310
mov #1 311; Guardo un numero Entero
mov 310 A; Cargo el primer termino en A
addi 311; Realizamos la operacion entera total.
mov A 312; Lo cargamos en la dir correspondiente.
mov #0 313
mov 308 A
muli #1
addi #1; Instr: Ref asig
mov @A 313;Asig
mov #0 314;Estoy en Ref:tid
mov #0 315;Estoy en Ref:tid
mov #0 315;Estoy en Ref:tid

mov 315 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 316
mov #0 315;Estoy en Ref:tid
mov #0 315;Estoy en Ref:tid

mov 315 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 316
mov #1 317; Guardo un numero Entero
mov 316 A; Cargo el primer termino en A
addi 317; Realizamos la operacion entera total.
mov A 318; Lo cargamos en la dir correspondiente.
mov #0 319
mov 314 A
muli #1
addi #30; Instr: Ref asig
mov @A 319;Asig
mov #0 320;Estoy en Ref:tid
mov #1 321; Guardo un numero Entero
mov #0 322
mov 320 A
muli #1
addi #263; Instr: Ref asig
mov @A 322;Asig
jmp L38
L37
; Realizamos con else.L38
jmp L40
L39
; Realizamos con else.L40
mov 311 A; Realizamos el if
jz L43
mov 321 A; Realizamos el if
jz L41
mov #1 318; Guardo un numero Entero
mov #0 322;Estoy en Ref:tid
mov #0 323;Estoy en Ref:tid
mov #0 323;Estoy en Ref:tid

mov 323 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 324
mov #0 323;Estoy en Ref:tid
mov #0 323;Estoy en Ref:tid

mov 323 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #2;Le sumo un tipo
mov @A 324
mov #1 325; Guardo un numero Entero
mov 324 A; Cargo el primer termino en A
addi 325; Realizamos la operacion entera total.
mov A 326; Lo cargamos en la dir correspondiente.
mov #0 327
mov 322 A
muli #1
addi #2; Instr: Ref asig
mov @A 327;Asig
mov #0 328;Estoy en Ref:tid
mov #0 329;Estoy en Ref:tid
mov #0 329;Estoy en Ref:tid

mov 329 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 330
mov #0 329;Estoy en Ref:tid
mov #0 329;Estoy en Ref:tid

mov 329 A; Factor : Ref 
muli #1; Multiplicamos por el tamanyo del vector
addi #30;Le sumo un tipo
mov @A 330
mov #1 331; Guardo un numero Entero
mov 330 A; Cargo el primer termino en A
addi 331; Realizamos la operacion entera total.
mov A 332; Lo cargamos en la dir correspondiente.
mov #0 333
mov 328 A
muli #1
addi #30; Instr: Ref asig
mov @A 333;Asig
mov #0 334;Estoy en Ref:tid
mov #1 335; Guardo un numero Entero
mov #0 336
mov 334 A
muli #1
addi #263; Instr: Ref asig
mov @A 336;Asig
jmp L42
L41
; Realizamos con else.L42
jmp L44
L43
; Realizamos con else.L44
mov 313 A; Realizamos el if
jz L47
wrr 317
wrl
wrr 320
wrl
jmp L48
L47
; Realizamos con else.mov 332 A; Realizamos el if
jz L45
mov #0 333;Estoy en Ref:tid
mov #1 334; Guardo un numero Entero
mov #0 335
mov 333 A
muli #1
addi #31; Instr: Ref asig
mov @A 335;Asig
jmp L46
L45
; Realizamos con else.mov #0 333;Estoy en Ref:tid
mov #2 334; Guardo un numero Entero
mov #0 335
mov 333 A
muli #1
addi #32; Instr: Ref asig
mov @A 335;Asig

L46

L48
jmp L50
L49
; Realizamos con else.L50
jmp else.lse.
mov 264 A; Realizamos el if
jz L53
mov #0 265;Estoy en Ref:tid
mov #0 266; Guardo un numero Entero
mov #0 266; Guardo un numero Entero
mov #1 267; Guardo un numero Entero
mov 266 A; Cargo el primer termino en A
subi 267; Realizamos la operacion entera total.
mov A 268; Lo cargamos en la dir correspondiente.
mov #0 269
mov 265 A
muli #1
addi #30; Instr: Ref asig
mov @A 269;Asig
jmp L54
L53
; Realizamos con else.L54
wrr 266
wrl
halt

