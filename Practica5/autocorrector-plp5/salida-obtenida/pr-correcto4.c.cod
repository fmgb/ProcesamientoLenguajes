mov #1 ; Guardo un numero Entero
mov #1 ; Guardo un numero Entero
mov #3 	; Guardo un numero Entero
 Empezamos la asignacion ENTERO a REAL
 A; Cargo el primer termino en A
subealizamos la operacion entera total.
; Realizamos la operacion entera total.
; Lo cargamos en la dir correspondiente.
mov #1 ; Guardo un numero Entero
mov #1 ; Guardo un numero Entero
mov #3 	; Guardo un numero Entero
 Empezamos la asignacion ENTERO a REAL
 A; Cargo el primer termino en A
subealizamos la operacion entera total.
; Realizamos la operacion entera total.
; Lo cargamos en la dir correspondiente.
mov #2 ; Guardo un numero Entero
mov #2 ; Guardo un numero Entero
pezamos la asignacion ENTERO a REAL
 A; Cargo el primer termino en A
mulizamos la operacion entera total.
; Realizamos la operacion entera total.
; Lo cargamos en la dir correspondiente.
mov #2 ; Guardo un numero Entero
mov #2 ; Guardo un numero Entero
pezamos la asignacion ENTERO a REAL
 A; Cargo el primer termino en A
mulizamos la operacion entera total.
; Realizamos la operacion entera total.
; Lo cargamos en la dir correspondiente.
zamos la asignacion ENTERO a REAL
 A; Cargo el primer termino en A
divamos la operacion entera total.
; Realizamos la operacion entera total.
 A; Empezamos la asignacion REAL a ENTERO
; Lo cargamos en la dir correspondiente.
mpezamos la asignacion ENTERO a REAL
 A; Cargo el primer termino en A
addmos la operacion entera total.
; Realizamos la operacion entera total.
A; Empezamos la asignacion REAL a ENTERO
; Lo cargamos en la dir correspondiente.
; Empezamos la asignacion ENTERO a REAL
 A
uli #
s la asignacion ENTERO a REAL
 @A
  mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A mov #0 ; Guardo un numero Entero
ignacion ENTERO a REAL
 A
uli #ror: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A mov #0 ; Guardo un numero Entero
ignacion ENTERO a REAL
 A
uli #ror: discarding; 
mov A mov #1 ; Guardo un numero Entero
nacion ENTERO a REAL
 A
li #r: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A mov #0 ; Guardo un numero Entero
ignacion ENTERO a REAL
 A
uli #ror: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A mov #0 ; Guardo un numero Entero
ignacion ENTERO a REAL
 A
uli #ror: discarding; 
mov A mov #1 ; Guardo un numero Entero
nacion ENTERO a REAL
 A
li #r: discarding; 
mov A mov #0 ; Guardo un numero Entero
cion ENTERO a REAL
 A
uli # discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A mov #0 ; Guardo un numero Entero
ignacion ENTERO a REAL
 A
uli #ror: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A mov #0 ; Guardo un numero Entero
ignacion ENTERO a REAL
 A
uli #ror: discarding; 
mov A mov #1 ; Guardo un numero Entero
nacion ENTERO a REAL
 A
li #r: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A mov #0 ; Guardo un numero Entero
ignacion ENTERO a REAL
 A
uli #ror: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A   mov #0 ; Guardo un numero Entero
 la asignacion ENTERO a REAL
 A
uli #ror; 
mov A mov #1 ; Guardo un numero Entero
a asignacion ENTERO a REAL
 A
li #r; 
mov A mov #0 ; Guardo un numero Entero
asignacion ENTERO a REAL
 A
uli #Error: discarding; 
mov A mov #0 ; Guardo un numero Entero
ignacion ENTERO a REAL
 A
uli #ror: discarding; 
mov A mov #1 ; Guardo un numero Entero
nacion ENTERO a REAL
 A
li #r: discarding; 
mov A mov #0 ; Guardo un numero Entero
cion ENTERO a REAL
 A
uli # discarding; 
mov A errorerrormov  A; Factor : Ref 
uli #
;Le sumo un tipo
 Entero

on ENTERO a REAL
 A
uli #
ddi #ENTERO a REAL
 @A
orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (mov #0 ); Guardo un numero Entero
a REAL
 A
uli #Error: popping; 
mov A *orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (mov #0 ); Guardo un numero Entero
a REAL
 A
uli #Error: popping; 
mov A *mov #0 +; Guardo un numero Entero
REAL
 A
li #ror: popping; 
mov A ,orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (mov #0 ); Guardo un numero Entero
a REAL
 A
uli #Error: popping; 
mov A *orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (mov #0 ); Guardo un numero Entero
a REAL
 A
uli #Error: popping; 
mov A *mov #0 +; Guardo un numero Entero
REAL
 A
li #ror: popping; 
mov A ,mov #0 -; Guardo un numero Entero
AL
 A
uli #r: popping; 
mov A .orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (mov #0 ); Guardo un numero Entero
a REAL
 A
uli #Error: popping; 
mov A *orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (mov #0 ); Guardo un numero Entero
a REAL
 A
uli #Error: popping; 
mov A *mov #0 +; Guardo un numero Entero
REAL
 A
li #ror: popping; 
mov A ,orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (mov #0 ); Guardo un numero Entero
a REAL
 A
uli #Error: popping; 
mov A *orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $orormov #0 #; Guardo un numero Entero
NTERO a REAL
 A
uli #rding; 
mov A $mov #0 %; Guardo un numero Entero
ERO a REAL
 A
li #ing; 
mov A &mov #0 '; Guardo un numero Entero
O a REAL
 A
uli #g; 
mov A (mov #0 ); Guardo un numero Entero
a REAL
 A
uli #Error: popping; 
mov A *mov #0 +; Guardo un numero Entero
REAL
 A
li #ror: popping; 
mov A ,mov #0 -; Guardo un numero Entero
AL
 A
uli #r: popping; 
mov A .cardingcardingmov / A; Factor : Ref 
uli #
;Le sumo un tipo
 Guardo un numero Real

cardingcardingmov / A; Factor : Ref 
uli #
;Le sumo un tipo
 Guardo un numero Real

mov #1 1; Guardo un numero Entero
itor
 A; Cargo el primer termino en A
add; Realizamos la operacion entera total.
ENTERO
; Lo cargamos en la dir correspondiente.

 A
uli #
ddi #r
 @A
ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :mov #0 ;; Guardo un numero Entero
A  A
uli #ory exhausted; 
mov A <ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :mov #0 ;; Guardo un numero Entero
A  A
uli #ory exhausted; 
mov A <mov #0 =; Guardo un numero Entero
 A
li #y exhausted; 
mov A >ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :mov #0 ;; Guardo un numero Entero
A  A
uli #ory exhausted; 
mov A <ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :mov #0 ;; Guardo un numero Entero
A  A
uli #ory exhausted; 
mov A <mov #0 =; Guardo un numero Entero
 A
li #y exhausted; 
mov A >mov #0 ?; Guardo un numero Entero
 A
uli #exhausted; 
mov A @ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :mov #0 ;; Guardo un numero Entero
A  A
uli #ory exhausted; 
mov A <ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :mov #0 ;; Guardo un numero Entero
A  A
uli #ory exhausted; 
mov A <mov #0 =; Guardo un numero Entero
 A
li #y exhausted; 
mov A >ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :mov #0 ;; Guardo un numero Entero
A  A
uli #ory exhausted; 
mov A <ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6ngngmov #0 5; Guardo un numero Entero

 A
uli #ng; 
mov A 6mov #1 7; Guardo un numero Entero
mov A  A
li #; 
mov A 8mov #0 9; Guardo un numero Entero
v A  A
uli #emory exhausted; 
mov A :mov #0 ;; Guardo un numero Entero
A  A
uli #ory exhausted; 
mov A <mov #0 =; Guardo un numero Entero
 A
li #y exhausted; 
mov A >mov #0 ?; Guardo un numero Entero
 A
uli #exhausted; 
mov A @pingpingmov A A; Factor : Ref 
uli #
;Le sumo un tipo
Real

pingpingmov A A; Factor : Ref 
uli #
;Le sumo un tipo
Real

mov #2 C; Guardo un numero Entero
 A; Cargo el primer termino en A
add la conversión del primer termino
; Realizamos la operacion entera total.
muli #; Lo cargamos en la dir correspondiente.
 A
uli #
ddi # A; Empezamos la asignacion REAL a ENTERO
 @A
memory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmov #0 M; Guardo un numero Entero
ezamos la asignacion REAL a ENTERO
 A
uli #nup: discarding lookahead; 
mov A Nmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmov #0 M; Guardo un numero Entero
ezamos la asignacion REAL a ENTERO
 A
uli #nup: discarding lookahead; 
mov A Nmov #1 O; Guardo un numero Entero
amos la asignacion REAL a ENTERO
 A
li #p: discarding lookahead; 
mov A Pmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmov #0 M; Guardo un numero Entero
ezamos la asignacion REAL a ENTERO
 A
uli #nup: discarding lookahead; 
mov A Nmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmov #0 M; Guardo un numero Entero
ezamos la asignacion REAL a ENTERO
 A
uli #nup: discarding lookahead; 
mov A Nmov #1 O; Guardo un numero Entero
amos la asignacion REAL a ENTERO
 A
li #p: discarding lookahead; 
mov A Pmov #0 Q; Guardo un numero Entero
os la asignacion REAL a ENTERO
 A
uli # discarding lookahead; 
mov A Rmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmov #0 M; Guardo un numero Entero
ezamos la asignacion REAL a ENTERO
 A
uli #nup: discarding lookahead; 
mov A Nmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmov #0 M; Guardo un numero Entero
ezamos la asignacion REAL a ENTERO
 A
uli #nup: discarding lookahead; 
mov A Nmov #1 O; Guardo un numero Entero
amos la asignacion REAL a ENTERO
 A
li #p: discarding lookahead; 
mov A Pmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmov #0 M; Guardo un numero Entero
ezamos la asignacion REAL a ENTERO
 A
uli #nup: discarding lookahead; 
mov A Nmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmemory exhaustedmemory exhaustedmov #0 G; Guardo un numero Entero
A; Empezamos la asignacion REAL a ENTERO
 A
uli #d; 
mov A Hmov #0 I; Guardo un numero Entero
 Empezamos la asignacion REAL a ENTERO
 A
li #Cleanup: discarding lookahead; 
mov A Jmov #0 K; Guardo un numero Entero
mpezamos la asignacion REAL a ENTERO
 A
uli #eanup: discarding lookahead; 
mov A Lmov #0 M; Guardo un numero Entero
ezamos la asignacion REAL a ENTERO
 A
uli #nup: discarding lookahead; 
mov A Nmov #1 O; Guardo un numero Entero
amos la asignacion REAL a ENTERO
 A
li #p: discarding lookahead; 
mov A Pmov #0 Q; Guardo un numero Entero
os la asignacion REAL a ENTERO
 A
uli # discarding lookahead; 
mov A Rtedtedmov S A; Factor : Ref 
uli #
;Le sumo un tipo
 
tedtedmov S A; Factor : Ref 
uli #
;Le sumo un tipo
 
mov #3 U; Guardo un numero Entero
a asignacion REAL a ENTERO
 A; Cargo el primer termino en A
addl primer termino
; Realizamos la operacion entera total.
; Lo cargamos en la dir correspondiente.
 la asignacion REAL a ENTERO
 A
uli #
ddi #signacion REAL a ENTERO
 @A
wrrIF
wrl
wrrse.
wrl
halt

